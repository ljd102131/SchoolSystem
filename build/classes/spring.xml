<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 自动将指定的包下有@Service等这些注解的类注册到Spring容器中 -->
	<context:component-scan base-package="lee.system.school.service.impl"></context:component-scan>

	<!-- 自动将指定的包下有@Repository等这些注解的类注册到Spring容器中 -->
	<context:component-scan base-package="lee.system.school.dao.impl"></context:component-scan>

	<!--事务管理器 ,对MyBatis操作数据库事务控制，spring使用JDBC的事务控制类-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 数据源dataSource在spring-mybatis.xml中配置了-->
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 事务的传播行为 -->
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<!-- AOP配置，对每个包下的业务层实现类(ServiceImpl)的所有方法进行事务控制 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* lee.system.*.service.impl.*.*(..))"/>
	</aop:config>

	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>